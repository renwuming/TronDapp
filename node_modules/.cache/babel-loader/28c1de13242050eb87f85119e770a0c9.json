{"ast":null,"code":"import _regeneratorRuntime from \"/Users/wkorz/work/tron/RedPacket/tron-test/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/wkorz/work/tron/RedPacket/tron-test/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/wkorz/work/tron/RedPacket/tron-test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wkorz/work/tron/RedPacket/tron-test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wkorz/work/tron/RedPacket/tron-test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wkorz/work/tron/RedPacket/tron-test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wkorz/work/tron/RedPacket/tron-test/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wkorz/work/tron/RedPacket/tron-test/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport * as artifact from './contracts/RedPacket';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.getUser =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var tron, result_0, create;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              tron = 1000000;\n              _context.next = 3;\n              return _this.contract.getUser().call();\n\n            case 3:\n              result_0 = _context.sent;\n              console.log(result_0);\n              create = result_0[1];\n              console.log(create);\n\n              _this.setState({\n                getUserKey: create\n              });\n\n              _this.setState({\n                getUserCreate: JSON.parse(result_0[1][1])\n              });\n\n              _this.setState({\n                getUserGet: JSON.parse(result_0[2])\n              });\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    _this.createPacket =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var tron, result_0;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              tron = 10 * 1000000;\n              _context2.next = 3;\n              return _this.contract.createPacket(10, 2, \"true\", \"true\", \"tron\", \"hello\").send({\n                feeLimit: 100000000,\n                callValue: tron,\n                shouldPollResponse: true\n              });\n\n            case 3:\n              result_0 = _context2.sent;\n              console.log(result_0);\n\n              _this.setState({\n                createPacket: JSON.stringify(result_0)\n              });\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n    _this.getPacket =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      var result_0;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _this.contract.getPacket(2, \"tron\").send();\n\n            case 2:\n              result_0 = _context3.sent;\n              console.log(result_0);\n\n              _this.setState({\n                getPacket: JSON.stringify(result_0)\n              });\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n    _this.getPacketstruct =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4() {\n      var tron, result_0;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              tron = 1000000;\n              _context4.next = 3;\n              return _this.contract.getPacketstruct(1).call();\n\n            case 3:\n              result_0 = _context4.sent;\n              console.log(result_0);\n\n              _this.setState({\n                getPacketstructAddress: result_0[1]\n              });\n\n              _this.setState({\n                getPacketstructTime: JSON.parse(result_0[2])\n              });\n\n              _this.setState({\n                getPacketstructMoney: JSON.parse(result_0[3]) / tron\n              });\n\n              _this.setState({\n                getPacketstructAllcount: JSON.parse(result_0[4])\n              });\n\n              _this.setState({\n                getPacketstructCount: JSON.parse(result_0[5])\n              });\n\n              _this.setState({\n                getPacketstructAve: String(result_0[6])\n              });\n\n              _this.setState({\n                getPacketstructCrypto: String(result_0[7])\n              });\n\n              _this.setState({\n                getPacketstructFinish: String(result_0[8])\n              });\n\n              _this.setState({\n                getPacketstructRecords: JSON.parse(result_0[9])\n              });\n\n              _this.setState({\n                getPacketstructBalance: JSON.parse(result_0[10]) / tron\n              });\n\n              _this.setState({\n                getPacketstructContent: result_0[11]\n              });\n\n            case 16:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, this);\n    }));\n    _this.getRecord =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee5() {\n      var tron, result_0;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              tron = 1000000;\n              _context5.next = 3;\n              return _this.contract.getRecord(1).call();\n\n            case 3:\n              result_0 = _context5.sent;\n              console.log(result_0);\n\n              _this.setState({\n                getRecordId: JSON.parse(result_0[0])\n              });\n\n              _this.setState({\n                getRecordOwner: result_0[1]\n              });\n\n              _this.setState({\n                getRecordTime: JSON.parse(result_0[2])\n              });\n\n              _this.setState({\n                getRecordMoney: JSON.parse(result_0[3]) / tron\n              });\n\n            case 9:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, this);\n    }));\n    window.tronWeb.setDefaultBlock('latest');\n    _this.contract = null;\n    _this.state = {\n      address: null,\n      balance: null,\n      contract: null,\n      tokenBalance: null,\n      result_0: null,\n      result_1: null,\n      result_2: null\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6() {\n        var tronWeb, address;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                tronWeb = window.tronWeb;\n                console.log('address', tronWeb.defaultAddress.base58);\n                this.setState({\n                  address: tronWeb.defaultAddress.base58\n                });\n                address = tronWeb.address.fromHex(artifact.networks['*'].address);\n                console.log(artifact.abi, artifact.networks['*'].address, address);\n                this.contract = tronWeb.contract(artifact.abi, address);\n                console.log(this.contract);\n\n              case 7:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }() //获取未领取的红包列表\n    //我的记录\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"current address\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, this.state.address), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"getUser\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, this.state.getUserKey), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"\\u5DF2\\u53D1\\u7684\\u7EA2\\u5305\\uFF1A\", this.state.getUserCreate), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"\\u5DF2\\u9886\\u53D6\\u7684\\u7EA2\\u5305\\uFF1A\", this.state.getUserGet), React.createElement(\"button\", {\n        onClick: this.getUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"getUser\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"createPacket\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, this.state.createPacket), React.createElement(\"button\", {\n        onClick: this.createPacket,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"createPacket\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"getPacket\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, this.state.getPacket), React.createElement(\"button\", {\n        onClick: this.getPacket,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"getPacket\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"getPacketstruct\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, this.state.getPacketstructAddress, \" \\u53D1\\u9001\\u7684\\u7EA2\\u5305\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"\\u7EA2\\u5305\\u795D\\u798F\\uFF1A\", this.state.getPacketstructContent), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"\\u521B\\u5EFA\\u65F6\\u95F4 \", this.state.getPacketstructTime), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"\\u5269\\u4F59\\u91D1\\u989D \", this.state.getPacketstructBalance, \" / \\u603B\\u91D1\\u989D \", this.state.getPacketstructMoney), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"\\u5DF2\\u7ECF\\u9886\\u53D6\\u7684\\u4EFD\\u6570 \", this.state.getPacketstructCount, \" / \\u603B\\u4EFD\\u6570\", this.state.getPacketstructAllcount), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"\\u666E\\u901A\\u7EA2\\u5305/\\u624B\\u6C14\\u7EA2\\u5305\", this.state.getPacketstructAve), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"\\u662F\\u5426\\u9700\\u8981\\u53E3\\u4EE4\", this.state.getPacketstructCrypto), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"\\u662F\\u5426\\u62A2\\u5149\", this.state.getPacketstructFinish), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"\\u7EA2\\u5305\\u8BB0\\u5F55\", this.state.getPacketstructRecords), React.createElement(\"button\", {\n        onClick: this.getPacketstruct,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"getPacketstruct\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"getRecord\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"\\u7B2C\", this.state.getRecordId, \"\\u4E2A\\u9886\\u53D6\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"\\u9886\\u53D6\\u8005\\uFF1A\", this.state.getRecordOwner), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"\\u9886\\u53D6\\u65F6\\u95F4\\uFF1A\", this.state.getRecordTime), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"\\u9886\\u53D6\\u91D1\\u989D\\uFF1A\", this.state.getRecordMoney), React.createElement(\"button\", {\n        onClick: this.getRecord,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"getRecord\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/wkorz/work/tron/RedPacket/tron-test/src/App.js"],"names":["React","Component","artifact","App","props","getUser","tron","contract","call","result_0","console","log","create","setState","getUserKey","getUserCreate","JSON","parse","getUserGet","createPacket","send","feeLimit","callValue","shouldPollResponse","stringify","getPacket","getPacketstruct","getPacketstructAddress","getPacketstructTime","getPacketstructMoney","getPacketstructAllcount","getPacketstructCount","getPacketstructAve","String","getPacketstructCrypto","getPacketstructFinish","getPacketstructRecords","getPacketstructBalance","getPacketstructContent","getRecord","getRecordId","getRecordOwner","getRecordTime","getRecordMoney","window","tronWeb","setDefaultBlock","state","address","balance","tokenBalance","result_1","result_2","defaultAddress","base58","fromHex","networks","abi"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport * as artifact from './contracts/RedPacket'\n\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n\n        window.tronWeb.setDefaultBlock('latest');\n\n        this.contract = null;\n        this.state = {\n            address: null,\n            balance: null,\n            contract: null,\n            tokenBalance: null,\n            result_0: null,\n            result_1: null,\n            result_2: null,\n            \n        }\n    }\n\n    async componentDidMount() {\n\n        let tronWeb = window.tronWeb;\n        console.log('address', tronWeb.defaultAddress.base58)\n        this.setState({address: tronWeb.defaultAddress.base58});\n        let address = tronWeb.address.fromHex(artifact.networks['*'].address);\n        console.log(artifact.abi, artifact.networks['*'].address, address)\n        this.contract = tronWeb.contract(artifact.abi, address);\n        console.log(this.contract);\n    }\n\n    //获取未领取的红包列表\n\n    //我的记录\n    getUser = async () => {\n        let tron = 1000000\n        let result_0 = await this.contract.getUser().call()\n        console.log(result_0)\n        let create = result_0[1]\n        console.log(create)\n        this.setState({getUserKey:create})\n        this.setState({getUserCreate:JSON.parse(result_0[1][1])})\n        this.setState({getUserGet:(JSON.parse(result_0[2]))})\n    };\n\n\n    //创建红包\n    createPacket = async () => {\n        let tron = 10*1000000; \n        let result_0 = await this.contract.createPacket(10, 2, \"true\",\"true\",\"tron\",\"hello\").send({\n            feeLimit:100000000,\n            callValue:tron,\n            shouldPollResponse:true\n        })\n        console.log(result_0)\n        this.setState({createPacket:JSON.stringify(result_0)})\n    };\n\n    //抢红包\n    getPacket = async () => {\n        let result_0 = await this.contract.getPacket(2,\"tron\").send()\n        console.log(result_0)\n        this.setState({getPacket:JSON.stringify(result_0)})\n    };\n\n    //获取红包信息\n\n    getPacketstruct = async () => {\n        let tron = 1000000\n        let result_0 = await this.contract.getPacketstruct(1).call()\n        console.log(result_0)\n        this.setState({getPacketstructAddress:result_0[1]})\n        this.setState({getPacketstructTime:JSON.parse(result_0[2])})\n        this.setState({getPacketstructMoney:JSON.parse(result_0[3]) / tron})\n        this.setState({getPacketstructAllcount:JSON.parse(result_0[4])})\n        this.setState({getPacketstructCount:JSON.parse(result_0[5])})\n        this.setState({getPacketstructAve:String(result_0[6])})\n        this.setState({getPacketstructCrypto:String(result_0[7])})\n        this.setState({getPacketstructFinish:String(result_0[8])})\n        this.setState({getPacketstructRecords:JSON.parse(result_0[9])})\n        this.setState({getPacketstructBalance:JSON.parse(result_0[10]) / tron})\n        this.setState({getPacketstructContent:result_0[11]})\n    };\n\n    //获取记录信息\n    getRecord = async () => {\n        let tron = 1000000\n        let result_0 = await this.contract.getRecord(1).call()\n        console.log(result_0)\n        this.setState({getRecordId:JSON.parse(result_0[0])})\n        this.setState({getRecordOwner:result_0[1]})\n        this.setState({getRecordTime:JSON.parse(result_0[2])})\n        this.setState({getRecordMoney:(JSON.parse(result_0[3]) / tron)})\n    };\n\n\n    render() {\n        return (\n            <div className=\"App\">\n                <div>\n                    <p>current address</p>\n                    <p>{this.state.address}</p>\n                    <hr></hr>\n                </div>\n\n                <div>\n                    <p>getUser</p>\n                    <p>{this.state.getUserKey}</p>\n                    <p>已发的红包：{this.state.getUserCreate}</p>\n                    <p>已领取的红包：{this.state.getUserGet}</p>\n                    <button onClick={this.getUser}>getUser</button>\n                    <hr></hr>\n                </div>\n\n                <div>\n                    <p>createPacket</p>\n                    <p>{this.state.createPacket}</p>\n                    <button onClick={this.createPacket}>createPacket</button>\n                    <hr></hr>\n                </div>\n\n                <div>\n                    <p>getPacket</p>\n                    <p>{this.state.getPacket}</p>\n                    <button onClick={this.getPacket}>getPacket</button>\n                    <hr></hr>\n                </div>\n\n                <div>\n                    <p>getPacketstruct</p>\n                    <p>{this.state.getPacketstructAddress} 发送的红包</p>\n                    <p>红包祝福：{this.state.getPacketstructContent}</p>\n                    <p>创建时间 {this.state.getPacketstructTime}</p>\n                    <p>剩余金额 {this.state.getPacketstructBalance} / 总金额 {this.state.getPacketstructMoney}</p>\n                    <p>已经领取的份数 {this.state.getPacketstructCount} / 总份数{this.state.getPacketstructAllcount}</p>\n                    <p>普通红包/手气红包{this.state.getPacketstructAve}</p>\n                    <p>是否需要口令{this.state.getPacketstructCrypto}</p>\n                    <p>是否抢光{this.state.getPacketstructFinish}</p>\n                    <p>红包记录{this.state.getPacketstructRecords}</p>\n                    <button onClick={this.getPacketstruct}>getPacketstruct</button>\n                    <hr></hr>\n                </div>\n\n                <div>\n                    <p>getRecord</p>\n                    <p>第{this.state.getRecordId}个领取</p>\n                    <p>领取者：{this.state.getRecordOwner}</p>\n                    <p>领取时间：{this.state.getRecordTime}</p>\n                    <p>领取金额：{this.state.getRecordMoney}</p>\n                    <button onClick={this.getRecord}>getRecord</button>\n                    <hr></hr>\n                </div>\n\n\n            </div>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"/Users/wkorz/work/tron/RedPacket/tron-test/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/wkorz/work/tron/RedPacket/tron-test/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/wkorz/work/tron/RedPacket/tron-test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wkorz/work/tron/RedPacket/tron-test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wkorz/work/tron/RedPacket/tron-test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wkorz/work/tron/RedPacket/tron-test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wkorz/work/tron/RedPacket/tron-test/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wkorz/work/tron/RedPacket/tron-test/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport * as artifact from './contracts/RedPacket';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.checkUser =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var result_0;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.contract.checkUser().call();\n\n            case 2:\n              result_0 = _context.sent;\n              console.log(result_0);\n\n              _this.setState({\n                checkUser: JSON.stringify(result_0)\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    _this.createPacket =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var tron, result_0;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              tron = 10 * 1000000;\n              _context2.next = 3;\n              return _this.contract.createPacket(tron, 2, \"true\", \"true\", \"tron\").send();\n\n            case 3:\n              result_0 = _context2.sent;\n              console.log(result_0);\n\n              _this.setState({\n                createPacket: JSON.stringify(result_0)\n              });\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n    _this.getPacket =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      var result_0;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _this.contract.getPacket(1, \"tron\").call();\n\n            case 2:\n              result_0 = _context3.sent;\n              console.log(result_0);\n\n              _this.setState({\n                getPacket: JSON.stringify(result_0)\n              });\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n    _this.getCreatefee =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4() {\n      var createfee;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _this.contract.getCreatefee().call();\n\n            case 2:\n              createfee = _context4.sent;\n\n              _this.setState({\n                createfee: createfee\n              });\n\n              console.log(createfee);\n\n              _this.setState({\n                getCreatefee: JSON.stringify(createfee)\n              });\n\n            case 6:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, this);\n    }));\n    _this.createCircle =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee5() {\n      var fee, callfee, result_0;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              fee = 1000000;\n              callfee = 10;\n              /*\n              if (fee > 0){\n                  callfee = this.createfee;\n              }\n              */\n              //await tronWeb.transactionBuilder.sendTrx(\"TXPHCzmAmjyERtWES6EXTYqUPfJfQSzp2m\",1000);\n\n              _context5.next = 4;\n              return _this.contract.createCircle(fee).send({\n                feeLimit: 100000000,\n                callValue: callfee,\n                shouldPollResponse: true\n              });\n\n            case 4:\n              result_0 = _context5.sent;\n              console.log(result_0);\n\n              _this.setState({\n                createCircle: JSON.stringify(result_0)\n              });\n\n            case 7:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, this);\n    }));\n    _this.joinCircle =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee6() {\n      var circle_keys, callfee, result_0;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              circle_keys = [1];\n              callfee = 0; //await tronWeb.transactionBuilder.sendTrx(\"TXPHCzmAmjyERtWES6EXTYqUPfJfQSzp2m\",1000);\n\n              _context6.next = 4;\n              return _this.contract.joinCircle(circle_keys).send({\n                feeLimit: 10000000,\n                callValue: callfee,\n                shouldPollResponse: true\n              });\n\n            case 4:\n              result_0 = _context6.sent;\n              console.log(result_0);\n\n              _this.setState({\n                joinCircle: JSON.stringify(result_0)\n              });\n\n            case 7:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, this);\n    }));\n    _this.createMessage =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee7() {\n      var circle_key, callfee, result_0;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              circle_key = 1;\n              callfee = 0; //await tronWeb.transactionBuilder.sendTrx(\"TXPHCzmAmjyERtWES6EXTYqUPfJfQSzp2m\",1000);\n\n              _context7.next = 4;\n              return _this.contract.createMessage(circle_key).send({\n                feeLimit: 10000000,\n                callValue: callfee,\n                shouldPollResponse: true\n              });\n\n            case 4:\n              result_0 = _context7.sent;\n              console.log(result_0);\n\n              _this.setState({\n                createMessage: JSON.stringify(result_0)\n              });\n\n            case 7:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, this);\n    }));\n    _this.payMessage =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee8() {\n      var message_key, money, callfee, result_0;\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              message_key = 1;\n              money = 1;\n              callfee = money * 1000000; ///1trx\n              //await tronWeb.transactionBuilder.sendTrx(\"TXPHCzmAmjyERtWES6EXTYqUPfJfQSzp2m\",1000);\n\n              _context8.next = 5;\n              return _this.contract.payMessage(message_key, callfee).send({\n                feeLimit: 1000000000,\n                callValue: callfee,\n                shouldPollResponse: true\n              });\n\n            case 5:\n              result_0 = _context8.sent;\n              console.log(result_0);\n\n              _this.setState({\n                payMessage: JSON.stringify(result_0)\n              });\n\n            case 8:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8, this);\n    }));\n    _this.getCircle =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee9() {\n      var result_0;\n      return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.next = 2;\n              return _this.contract.getCircle(2).call();\n\n            case 2:\n              result_0 = _context9.sent;\n              console.log(result_0);\n\n              _this.setState({\n                getCircle: JSON.stringify(result_0)\n              });\n\n            case 5:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9, this);\n    }));\n    _this.getUser =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee10() {\n      var result_0;\n      return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.next = 2;\n              return _this.contract.getUser().call();\n\n            case 2:\n              result_0 = _context10.sent;\n              console.log(result_0);\n\n              _this.setState({\n                getUser: JSON.stringify(result_0)\n              });\n\n            case 5:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10, this);\n    }));\n    _this.getMessage =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee11() {\n      var result_0;\n      return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              _context11.next = 2;\n              return _this.contract.getMessage(1).call();\n\n            case 2:\n              result_0 = _context11.sent;\n              console.log(result_0);\n\n              _this.setState({\n                getMessage: JSON.stringify(result_0)\n              });\n\n            case 5:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11, this);\n    }));\n    window.tronWeb.setDefaultBlock('latest');\n    _this.contract = null;\n    _this.state = {\n      address: null,\n      balance: null,\n      contract: null,\n      tokenBalance: null,\n      result_0: null,\n      result_1: null,\n      result_2: null\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee12() {\n        var tronWeb, address;\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                tronWeb = window.tronWeb;\n                console.log('address', tronWeb.defaultAddress.base58);\n                this.setState({\n                  address: tronWeb.defaultAddress.base58\n                });\n                address = tronWeb.address.fromHex(artifact.networks['*'].address);\n                console.log(artifact.abi, artifact.networks['*'].address, address);\n                this.contract = tronWeb.contract(artifact.abi, address);\n                console.log(this.contract); //await this.getCircleKey();\n                //await this.getCircle();\n                //await this.getUser();\n                //await this.createMessage();\n                //await this.getMessage();\n                // await this.payMessage();\n                //await this.createCircle();\n                // await this.refreshTokenBalance();\n\n              case 7:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }() //首次登录，注册用户\n    //判断是否首次登录\n    //true 表示已经注册，false表示第一次登录，需要注册\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"current address\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, this.state.address), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"checkUser\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, this.state.checkUser), React.createElement(\"button\", {\n        onClick: this.checkUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"checkUser\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"createPacket\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, this.state.createPacket), React.createElement(\"button\", {\n        onClick: this.createPacket,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"createPacket\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"getPacket\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, this.state.getPacket), React.createElement(\"button\", {\n        onClick: this.getPacket,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"getPacket\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, \"getCreatefee\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, this.state.getCreatefee), React.createElement(\"button\", {\n        onClick: this.getCreatefee,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"getCreatefee\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, \"createCircle\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, this.state.createCircle), React.createElement(\"button\", {\n        onClick: this.createCircle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \"createCircle\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"joinCircle\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, this.state.joinCircle), React.createElement(\"button\", {\n        onClick: this.joinCircle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"joinCircle\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, \"createMessage\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, this.state.createMessage), React.createElement(\"button\", {\n        onClick: this.createMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, \"createMessage\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, \"payMessage\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, this.state.payMessage), React.createElement(\"button\", {\n        onClick: this.payMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \"payMessage\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, \"getCircle\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, this.state.getCircle), React.createElement(\"button\", {\n        onClick: this.getCircle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, \"getCircle\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, \"getUser\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, this.state.getUser), React.createElement(\"button\", {\n        onClick: this.getUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, \"getUser\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, \"getMessage\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, this.state.getMessage), React.createElement(\"button\", {\n        onClick: this.getMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, \"getMessage\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/wkorz/work/tron/RedPacket/tron-test/src/App.js"],"names":["React","Component","artifact","App","props","checkUser","contract","call","result_0","console","log","setState","JSON","stringify","createPacket","tron","send","getPacket","getCreatefee","createfee","createCircle","fee","callfee","feeLimit","callValue","shouldPollResponse","joinCircle","circle_keys","createMessage","circle_key","payMessage","message_key","money","getCircle","getUser","getMessage","window","tronWeb","setDefaultBlock","state","address","balance","tokenBalance","result_1","result_2","defaultAddress","base58","fromHex","networks","abi"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport * as artifact from './contracts/RedPacket'\n\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n\n        window.tronWeb.setDefaultBlock('latest');\n\n        this.contract = null;\n        this.state = {\n            address: null,\n            balance: null,\n            contract: null,\n            tokenBalance: null,\n            result_0: null,\n            result_1: null,\n            result_2: null,\n        }\n    }\n\n    async componentDidMount() {\n\n        let tronWeb = window.tronWeb;\n        console.log('address', tronWeb.defaultAddress.base58)\n        this.setState({address: tronWeb.defaultAddress.base58});\n        let address = tronWeb.address.fromHex(artifact.networks['*'].address);\n        console.log(artifact.abi, artifact.networks['*'].address, address)\n        this.contract = tronWeb.contract(artifact.abi, address);\n        console.log(this.contract)\n        //await this.getCircleKey();\n        //await this.getCircle();\n        //await this.getUser();\n        //await this.createMessage();\n        //await this.getMessage();\n        // await this.payMessage();\n        //await this.createCircle();\n        // await this.refreshTokenBalance();\n    }\n\n//首次登录，注册用户\n    //判断是否首次登录\n    //true 表示已经注册，false表示第一次登录，需要注册\n    checkUser = async () => {\n        let result_0 = await this.contract.checkUser().call()\n        console.log(result_0)\n        this.setState({checkUser:JSON.stringify(result_0)})\n    };\n\n\n    //仅第一次登录时使用\n    //创建用户，参数是一个数组[],里面的值是circle_key\n    createPacket = async () => {\n        let tron = 10*1000000; \n        let result_0 = await this.contract.createPacket(tron, 2, \"true\",\"true\",\"tron\").send()\n        console.log(result_0)\n        this.setState({createPacket:JSON.stringify(result_0)})\n    };\n\n    //测试用\n    getPacket = async () => {\n        let result_0 = await this.contract.getPacket(1,\"tron\").call()\n        console.log(result_0)\n        this.setState({getPacket:JSON.stringify(result_0)})\n    };\n\n    //获取创建付费圈子所需的手续费\n    //免费圈子手续费位0\n    getCreatefee = async () => {\n        let createfee = await this.contract.getCreatefee().call()\n        this.setState({createfee});\n        console.log(createfee)\n        this.setState({getCreatefee:JSON.stringify(createfee)})\n    };\n\n\n    //创建圈子，参数是一个整数，是加入这个圈子需要收取的费用，0则表示免费\n    //\n    createCircle = async () => {\n        let fee = 1000000;\n        let callfee = 10;\n        /*\n        if (fee > 0){\n            callfee = this.createfee;\n        }\n        */\n        //await tronWeb.transactionBuilder.sendTrx(\"TXPHCzmAmjyERtWES6EXTYqUPfJfQSzp2m\",1000);\n        let result_0 = await this.contract.createCircle(fee).send({\n            feeLimit:100000000,\n            callValue:callfee,\n            shouldPollResponse:true\n        })\n        console.log(result_0)\n        this.setState({createCircle:JSON.stringify(result_0)})\n    };\n\n    //加入圈子,参数是一个数组，表示要加入圈子的key\n    joinCircle = async () => {\n        let circle_keys = [1];\n        let callfee = 0;\n        //await tronWeb.transactionBuilder.sendTrx(\"TXPHCzmAmjyERtWES6EXTYqUPfJfQSzp2m\",1000);\n        let result_0 = await this.contract.joinCircle(circle_keys).send({\n            feeLimit:10000000,\n            callValue:callfee,\n            shouldPollResponse:true\n        })\n        console.log(result_0)\n        this.setState({joinCircle:JSON.stringify(result_0)})\n    };\n\n    //发布文章，参数是文章要发表到的圈子的key\n    //1. 该圈子存在\n    //2. 已经加入了该圈子\n    createMessage = async () => {\n        let circle_key = 1;\n        let callfee = 0;\n        //await tronWeb.transactionBuilder.sendTrx(\"TXPHCzmAmjyERtWES6EXTYqUPfJfQSzp2m\",1000);\n        let result_0 = await this.contract.createMessage(circle_key).send({\n            feeLimit:10000000,\n            callValue:callfee,\n            shouldPollResponse:true\n        })\n        console.log(result_0)\n        this.setState({createMessage:JSON.stringify(result_0)})\n    };\n\n    //打赏文章，参数两个 --- 文章的key， 要打赏的金额\n    payMessage = async () => {\n        let message_key = 1;\n        let money = 1;\n        let callfee = money * 1000000; ///1trx\n        //await tronWeb.transactionBuilder.sendTrx(\"TXPHCzmAmjyERtWES6EXTYqUPfJfQSzp2m\",1000);\n        let result_0 = await this.contract.payMessage(message_key,callfee).send({\n            feeLimit:1000000000,\n            callValue:callfee,\n            shouldPollResponse:true\n        })\n        console.log(result_0)\n        this.setState({payMessage:JSON.stringify(result_0)})\n    };\n\n    //获取圈子的数据，参数为圈子的key值\n    getCircle = async () => {\n        let result_0 = await this.contract.getCircle(2).call()\n        console.log(result_0)\n        this.setState({getCircle:JSON.stringify(result_0)})\n    };\n\n    //获取用户的数据，不需要参数\n    getUser = async () => {\n        let result_0 = await this.contract.getUser().call()\n        console.log(result_0)\n        this.setState({getUser:JSON.stringify(result_0)})\n    };\n\n    //获取文章的数据，参数为文章的key值\n    getMessage = async () => {\n        let result_0 = await this.contract.getMessage(1).call()\n        console.log(result_0)\n        this.setState({getMessage:JSON.stringify(result_0)})\n    };\n\n\n    render() {\n        return (\n            <div className=\"App\">\n                <div>\n                    <p>current address</p>\n                    <p>{this.state.address}</p>\n                    <hr></hr>\n                </div>\n                <div>\n                    <p>checkUser</p>\n                    <p>{this.state.checkUser}</p>\n                    <button onClick={this.checkUser}>checkUser</button>\n                    <hr></hr>\n                </div>\n\n                <div>\n                    <p>createPacket</p>\n                    <p>{this.state.createPacket}</p>\n                    <button onClick={this.createPacket}>createPacket</button>\n                    <hr></hr>\n                </div>\n\n                <div>\n                    <p>getPacket</p>\n                    <p>{this.state.getPacket}</p>\n                    <button onClick={this.getPacket}>getPacket</button>\n                    <hr></hr>\n                </div>\n\n                <div>\n                    <p>getCreatefee</p>\n                    <p>{this.state.getCreatefee}</p>\n                    <button onClick={this.getCreatefee}>getCreatefee</button>\n                    <hr></hr>\n                </div>\n\n                <div>\n                    <p>createCircle</p>\n                    <p>{this.state.createCircle}</p>\n                    <button onClick={this.createCircle}>createCircle</button>\n                    <hr></hr>\n                </div>\n\n                <div>\n                    <p>joinCircle</p>\n                    <p>{this.state.joinCircle}</p>\n                    <button onClick={this.joinCircle}>joinCircle</button>\n                    <hr></hr>\n                </div>\n\n                <div>\n                    <p>createMessage</p>\n                    <p>{this.state.createMessage}</p>\n                    <button onClick={this.createMessage}>createMessage</button>\n                    <hr></hr>\n                </div>\n\n                <div>\n                    <p>payMessage</p>\n                    <p>{this.state.payMessage}</p>\n                    <button onClick={this.payMessage}>payMessage</button>\n                    <hr></hr>\n                </div>\n\n                <div>\n                    <p>getCircle</p>\n                    <p>{this.state.getCircle}</p>\n                    <button onClick={this.getCircle}>getCircle</button>\n                    <hr></hr>\n                </div>\n\n                <div>\n                    <p>getUser</p>\n                    <p>{this.state.getUser}</p>\n                    <button onClick={this.getUser}>getUser</button>\n                    <hr></hr>\n                </div>\n\n                <div>\n                    <p>getMessage</p>\n                    <p>{this.state.getMessage}</p>\n                    <button onClick={this.getMessage}>getMessage</button>\n                    <hr></hr>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
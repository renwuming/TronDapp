{"ast":null,"code":"import _regeneratorRuntime from \"/Users/wkorz/work/tron/RedPacket/tron-test/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/wkorz/work/tron/RedPacket/tron-test/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/wkorz/work/tron/RedPacket/tron-test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wkorz/work/tron/RedPacket/tron-test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wkorz/work/tron/RedPacket/tron-test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wkorz/work/tron/RedPacket/tron-test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wkorz/work/tron/RedPacket/tron-test/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wkorz/work/tron/RedPacket/tron-test/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport * as artifact from './contracts/RedPacket';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.createPacket =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var tron, result_0;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              tron = 10 * 1000000;\n              _context.next = 3;\n              return _this.contract.createPacket(10, 2, \"true\", \"true\", \"tron\", \"hello\").send({\n                feeLimit: 100000000,\n                callValue: tron,\n                shouldPollResponse: true\n              });\n\n            case 3:\n              result_0 = _context.sent;\n              console.log(result_0);\n\n              _this.setState({\n                createPacket: JSON.stringify(result_0)\n              });\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    _this.getPacket =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var result_0;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _this.contract.getPacket(1, \"tron\").send();\n\n            case 2:\n              result_0 = _context2.sent;\n              console.log(result_0);\n\n              _this.setState({\n                getPacket: JSON.stringify(result_0)\n              });\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n    _this.getPacketstruct =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      var result_0;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _this.contract.getPacketstruct(1).call();\n\n            case 2:\n              result_0 = _context3.sent;\n              console.log(result_0);\n\n              _this.setState({\n                getPacketstruct: JSON.stringify(result_0)\n              });\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n    _this.getRecord =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4() {\n      var result_0, recorddata;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.t0 = JSON;\n              _context4.next = 3;\n              return _this.contract.getRecord(1).call();\n\n            case 3:\n              _context4.t1 = _context4.sent;\n              result_0 = _context4.t0.stringify.call(_context4.t0, _context4.t1);\n              recorddata = result_0.split(\",\");\n              console.log(recorddata);\n\n              _this.setState({\n                getRecordId: recorddata[0]\n              });\n\n              _this.setState({\n                getRecordOwner: recorddata[1]\n              });\n\n              _this.setState({\n                getRecordTime: recorddata[2]\n              });\n\n              _this.setState({\n                getRecordMoney: recorddata[3]\n              });\n\n            case 11:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, this);\n    }));\n    window.tronWeb.setDefaultBlock('latest');\n    _this.contract = null;\n    _this.state = {\n      address: null,\n      balance: null,\n      contract: null,\n      tokenBalance: null,\n      result_0: null,\n      result_1: null,\n      result_2: null\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5() {\n        var tronWeb, address;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                tronWeb = window.tronWeb;\n                console.log('address', tronWeb.defaultAddress.base58);\n                this.setState({\n                  address: tronWeb.defaultAddress.base58\n                });\n                address = tronWeb.address.fromHex(artifact.networks['*'].address);\n                console.log(artifact.abi, artifact.networks['*'].address, address);\n                this.contract = tronWeb.contract(artifact.abi, address);\n                console.log(this.contract);\n\n              case 7:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }() //创建红包\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"current address\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, this.state.address), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"createPacket\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, this.state.createPacket), React.createElement(\"button\", {\n        onClick: this.createPacket,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"createPacket\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"getPacket\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, this.state.getPacket), React.createElement(\"button\", {\n        onClick: this.getPacket,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"getPacket\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"getPacketstruct\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, this.state.getPacketstruct), React.createElement(\"button\", {\n        onClick: this.getPacketstruct,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"getPacketstruct\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"getRecord\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, this.state.getRecordId), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, this.state.getRecordOwner), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, this.state.getRecordTime), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, this.state.getRecordMoney), React.createElement(\"button\", {\n        onClick: this.getRecord,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"getRecord\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/wkorz/work/tron/RedPacket/tron-test/src/App.js"],"names":["React","Component","artifact","App","props","createPacket","tron","contract","send","feeLimit","callValue","shouldPollResponse","result_0","console","log","setState","JSON","stringify","getPacket","getPacketstruct","call","getRecord","recorddata","split","getRecordId","getRecordOwner","getRecordTime","getRecordMoney","window","tronWeb","setDefaultBlock","state","address","balance","tokenBalance","result_1","result_2","defaultAddress","base58","fromHex","networks","abi"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport * as artifact from './contracts/RedPacket'\n\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n\n        window.tronWeb.setDefaultBlock('latest');\n\n        this.contract = null;\n        this.state = {\n            address: null,\n            balance: null,\n            contract: null,\n            tokenBalance: null,\n            result_0: null,\n            result_1: null,\n            result_2: null,\n        }\n    }\n\n    async componentDidMount() {\n\n        let tronWeb = window.tronWeb;\n        console.log('address', tronWeb.defaultAddress.base58)\n        this.setState({address: tronWeb.defaultAddress.base58});\n        let address = tronWeb.address.fromHex(artifact.networks['*'].address);\n        console.log(artifact.abi, artifact.networks['*'].address, address)\n        this.contract = tronWeb.contract(artifact.abi, address);\n        console.log(this.contract);\n    }\n\n    //创建红包\n    createPacket = async () => {\n        let tron = 10*1000000; \n        let result_0 = await this.contract.createPacket(10, 2, \"true\",\"true\",\"tron\",\"hello\").send({\n            feeLimit:100000000,\n            callValue:tron,\n            shouldPollResponse:true\n        })\n        console.log(result_0)\n        this.setState({createPacket:JSON.stringify(result_0)})\n    };\n\n    //抢红包\n    getPacket = async () => {\n        let result_0 = await this.contract.getPacket(1,\"tron\").send()\n        console.log(result_0)\n        this.setState({getPacket:JSON.stringify(result_0)})\n    };\n\n    //获取红包信息\n    getPacketstruct = async () => {\n        let result_0 = await this.contract.getPacketstruct(1).call()\n        console.log(result_0)\n        this.setState({getPacketstruct:JSON.stringify(result_0)})\n    };\n\n    //获取记录信息\n    getRecord = async () => {\n        let result_0 = JSON.stringify(await this.contract.getRecord(1).call())\n        let recorddata = result_0.split(\",\");\n        console.log(recorddata)\n        this.setState({getRecordId:recorddata[0]})\n        this.setState({getRecordOwner:recorddata[1]})\n        this.setState({getRecordTime:recorddata[2]})\n        this.setState({getRecordMoney:recorddata[3]})\n    };\n\n\n    render() {\n        return (\n            <div className=\"App\">\n                <div>\n                    <p>current address</p>\n                    <p>{this.state.address}</p>\n                    <hr></hr>\n                </div>\n\n                <div>\n                    <p>createPacket</p>\n                    <p>{this.state.createPacket}</p>\n                    <button onClick={this.createPacket}>createPacket</button>\n                    <hr></hr>\n                </div>\n\n                <div>\n                    <p>getPacket</p>\n                    <p>{this.state.getPacket}</p>\n                    <button onClick={this.getPacket}>getPacket</button>\n                    <hr></hr>\n                </div>\n\n                <div>\n                    <p>getPacketstruct</p>\n                    <p>{this.state.getPacketstruct}</p>\n                    <button onClick={this.getPacketstruct}>getPacketstruct</button>\n                    <hr></hr>\n                </div>\n\n                <div>\n                    <p>getRecord</p>\n                    <p>{this.state.getRecordId}</p>\n                    <p>{this.state.getRecordOwner}</p>\n                    <p>{this.state.getRecordTime}</p>\n                    <p>{this.state.getRecordMoney}</p>\n                    <button onClick={this.getRecord}>getRecord</button>\n                    <hr></hr>\n                </div>\n\n\n            </div>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"/Users/wkorz/work/tron/tron-test/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/wkorz/work/tron/tron-test/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/wkorz/work/tron/tron-test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wkorz/work/tron/tron-test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wkorz/work/tron/tron-test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wkorz/work/tron/tron-test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wkorz/work/tron/tron-test/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wkorz/work/tron/tron-test/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport * as artifact from './contracts/NoSecret';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.refreshBalance =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var result_0;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.contract.getUserKey().call();\n\n            case 2:\n              result_0 = _context.sent;\n              console.log(result_0);\n\n              _this.setState({\n                result_0: JSON.stringify(result_0)\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    _this.function_1 =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var result_1;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _this.contract.getUserKey().call();\n\n            case 2:\n              result_1 = _context2.sent;\n              console.log(result_1);\n\n              _this.setState({\n                result_1: JSON.stringify(result_1)\n              });\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n    _this.function_2 =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      var result_2;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _this.contract.getUserKey().call();\n\n            case 2:\n              result_2 = _context3.sent;\n              console.log(result_2);\n\n              _this.setState({\n                result_2: JSON.stringify(result_2)\n              });\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n    window.tronWeb.setDefaultBlock('latest');\n    _this.contract = null;\n    _this.state = {\n      address: null,\n      balance: null,\n      contract: null,\n      tokenBalance: null,\n      result_0: null,\n      result_1: null,\n      result_2: null\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        var tronWeb, address;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                tronWeb = window.tronWeb;\n                console.log('address', tronWeb.defaultAddress.base58);\n                this.setState({\n                  address: tronWeb.defaultAddress.base58\n                });\n                address = tronWeb.address.fromHex(artifact.networks['*'].address);\n                console.log(artifact.abi, artifact.networks['*'].address, address);\n                this.contract = tronWeb.contract(artifact.abi, address);\n                console.log(this.contract);\n                _context4.next = 9;\n                return this.refreshBalance();\n\n              case 9:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"current address\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, this.state.address), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"current trx balance\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, this.state.result_0), React.createElement(\"button\", {\n        onClick: this.refreshBalance,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Refresh balance\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"function 1\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, this.state.result_1), React.createElement(\"button\", {\n        onClick: this.function_1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"test function 1\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"function 2\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, this.state.result_2), React.createElement(\"button\", {\n        onClick: this.function_2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"test function 2\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/wkorz/work/tron/tron-test/src/App.js"],"names":["React","Component","artifact","App","props","refreshBalance","contract","getUserKey","call","result_0","console","log","setState","JSON","stringify","function_1","result_1","function_2","result_2","window","tronWeb","setDefaultBlock","state","address","balance","tokenBalance","defaultAddress","base58","fromHex","networks","abi"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport * as artifact from './contracts/NoSecret'\n\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n\n        window.tronWeb.setDefaultBlock('latest');\n\n        this.contract = null;\n        this.state = {\n            address: null,\n            balance: null,\n            contract: null,\n            tokenBalance: null,\n            result_0: null,\n            result_1: null,\n            result_2: null\n        }\n    }\n\n    async componentDidMount() {\n\n        let tronWeb = window.tronWeb;\n        console.log('address', tronWeb.defaultAddress.base58)\n        this.setState({address: tronWeb.defaultAddress.base58});\n        let address = tronWeb.address.fromHex(artifact.networks['*'].address);\n        console.log(artifact.abi, artifact.networks['*'].address, address)\n        this.contract = tronWeb.contract(artifact.abi, address);\n        console.log(this.contract)\n        await this.refreshBalance();\n        // await this.refreshTokenBalance();\n    }\n\n\n    refreshBalance = async () => {\n        let result_0 = await this.contract.getUserKey().call()\n        console.log(result_0)\n        this.setState({result_0:JSON.stringify(result_0)})\n    };\n\n    function_1 = async () => {\n        let result_1 = await this.contract.getUserKey().call()\n        console.log(result_1)\n        this.setState({result_1:JSON.stringify(result_1)})\n    };\n\n    function_2 = async () => {\n        let result_2 = await this.contract.getUserKey().call()\n        console.log(result_2)\n        this.setState({result_2:JSON.stringify(result_2)})\n    };\n\n    render() {\n        return (\n            <div className=\"App\">\n                <div>\n                    <p>current address</p>\n                    <p>{this.state.address}</p>\n                    <hr></hr>\n                </div>\n                <div>\n                    <p>current trx balance</p>\n                    <p>{this.state.result_0}</p>\n                    <button onClick={this.refreshBalance}>Refresh balance</button>\n                    <hr></hr>\n                </div>\n\n                <div>\n                    <p>function 1</p>\n                    <p>{this.state.result_1}</p>\n                    <button onClick={this.function_1}>test function 1</button>\n                    <hr></hr>\n                </div>\n                <div>\n                    <p>function 2</p>\n                    <p>{this.state.result_2}</p>\n                    <button onClick={this.function_2}>test function 2</button>\n                    <hr></hr>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}